{"ast":null,"code":"import _toConsumableArray from \"/home/alexander/personal_projects/chat-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/alexander/personal_projects/chat-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/alexander/personal_projects/chat-app/src/Contexts/ConversationsProvider.js\";\nimport React, { useContext } from 'react';\nimport useLocalStorage from '../Hooks/useLocalStorage';\nvar ConversationsContext = React.createContext();\nexport function useConversations() {\n  return useContext(ConversationsContext);\n}\nexport function ConversationsProvider(_ref) {\n  var children = _ref.children;\n\n  var _useLocalStorage = useLocalStorage('conversations', []),\n      _useLocalStorage2 = _slicedToArray(_useLocalStorage, 2),\n      conversations = _useLocalStorage2[0],\n      setConversations = _useLocalStorage2[1];\n\n  function createConversation(recipients) {\n    setConversations(function (prevConversations) {\n      return [].concat(_toConsumableArray(prevConversations), [{\n        recipients: recipients,\n        messages: []\n      }]);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(ConversationsContext.Provider, {\n    value: {\n      conversations: conversations,\n      createConversation: createConversation\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, children);\n}","map":{"version":3,"names":["React","useContext","useLocalStorage","ConversationsContext","createContext","useConversations","ConversationsProvider","children","conversations","setConversations","createConversation","recipients","prevConversations","messages"],"sources":["/home/alexander/personal_projects/chat-app/src/Contexts/ConversationsProvider.js"],"sourcesContent":["import React, { useContext } from 'react'\nimport useLocalStorage from '../Hooks/useLocalStorage'\n\nconst ConversationsContext = React.createContext()\n\nexport function useConversations() {\n    return useContext(ConversationsContext)\n}\n\nexport function ConversationsProvider({ children }) {\n    const [conversations, setConversations] = useLocalStorage('conversations', [])\n\n    function createConversation(recipients) {\n        setConversations(prevConversations => {\n            return [...prevConversations, { recipients, messages: [] }]\n        })\n    }\n\n    return (\n        <ConversationsContext.Provider value={{conversations, createConversation}}>\n        {children}\n        </ConversationsContext.Provider>\n    )\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AAEA,IAAMC,oBAAoB,GAAGH,KAAK,CAACI,aAAN,EAA7B;AAEA,OAAO,SAASC,gBAAT,GAA4B;EAC/B,OAAOJ,UAAU,CAACE,oBAAD,CAAjB;AACH;AAED,OAAO,SAASG,qBAAT,OAA6C;EAAA,IAAZC,QAAY,QAAZA,QAAY;;EAAA,uBACNL,eAAe,CAAC,eAAD,EAAkB,EAAlB,CADT;EAAA;EAAA,IACzCM,aADyC;EAAA,IAC1BC,gBAD0B;;EAGhD,SAASC,kBAAT,CAA4BC,UAA5B,EAAwC;IACpCF,gBAAgB,CAAC,UAAAG,iBAAiB,EAAI;MAClC,oCAAWA,iBAAX,IAA8B;QAAED,UAAU,EAAVA,UAAF;QAAcE,QAAQ,EAAE;MAAxB,CAA9B;IACH,CAFe,CAAhB;EAGH;;EAED,oBACI,oBAAC,oBAAD,CAAsB,QAAtB;IAA+B,KAAK,EAAE;MAACL,aAAa,EAAbA,aAAD;MAAgBE,kBAAkB,EAAlBA;IAAhB,CAAtC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACCH,QADD,CADJ;AAKH"},"metadata":{},"sourceType":"module"}