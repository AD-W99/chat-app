{"ast":null,"code":"import _toConsumableArray from \"/home/alexander/personal_projects/chat-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/alexander/personal_projects/chat-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/alexander/personal_projects/chat-app/src/Components/NewConversationModal.js\";\nimport React, { useState } from 'react';\nimport { Modal, Form, Button } from 'react-bootstrap';\nimport { useContacts } from '../Contexts/ContactsProvider';\nimport { useConversations } from '../Contexts/ConversationsProvider';\nexport default function NewConversationModal(_ref) {\n  var _this = this;\n\n  var closeModal = _ref.closeModal;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedContactIds = _useState2[0],\n      setSelectedContactIds = _useState2[1];\n\n  var _useContacts = useContacts(),\n      contacts = _useContacts.contacts;\n\n  var _useConversations = useConversations(),\n      createConversation = _useConversations.createConversation;\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    createConversation(selectedContactIds);\n    closeModal();\n  }\n\n  function handleCheckboxChange(contactId) {\n    setSelectedContactIds(function (prevSelectedContactIds) {\n      if (prevSelectedContactIds.includes(contactId)) {\n        return prevSelectedContactIds.filter(function (prevId) {\n          return contactId !== prevId;\n        });\n      } else {\n        return [].concat(_toConsumableArray(prevSelectedContactIds), [contactId]);\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, \"Create Conversation\"), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, contacts.map(function (contact) {\n    return /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: contact.id,\n      key: contact.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Check, {\n      type: \"checkbox\",\n      value: selectedContactIds.includes(contact.id),\n      label: contact.name,\n      onChange: function onChange() {\n        return handleCheckboxChange(contact.id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 29\n      }\n    }));\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: \"mt-3\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, \"Create\"))));\n}","map":{"version":3,"names":["React","useState","Modal","Form","Button","useContacts","useConversations","NewConversationModal","closeModal","selectedContactIds","setSelectedContactIds","contacts","createConversation","handleSubmit","e","preventDefault","handleCheckboxChange","contactId","prevSelectedContactIds","includes","filter","prevId","map","contact","id","name"],"sources":["/home/alexander/personal_projects/chat-app/src/Components/NewConversationModal.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { Modal, Form, Button } from 'react-bootstrap'\nimport { useContacts } from '../Contexts/ContactsProvider'\nimport { useConversations } from '../Contexts/ConversationsProvider'\n\nexport default function NewConversationModal({ closeModal }) {\n    const [selectedContactIds, setSelectedContactIds] = useState([])\n    const { contacts } = useContacts()\n    const { createConversation } = useConversations()\n\n    function handleSubmit(e) {\n        e.preventDefault()\n\n        createConversation(selectedContactIds)\n        closeModal()\n    }\n\n    function handleCheckboxChange(contactId) {\n        setSelectedContactIds(prevSelectedContactIds => {\n            if (prevSelectedContactIds.includes(contactId)) {\n                return prevSelectedContactIds.filter(prevId => {\n                    return contactId !== prevId\n                })\n            } else {\n                return [...prevSelectedContactIds, contactId]\n            }\n        })\n    }\n\n    return (\n        <>\n            <Modal.Header closeButton>Create Conversation</Modal.Header>\n            <Modal.Body>\n                <Form onSubmit={handleSubmit}>\n                    {contacts.map(contact => (\n                        <Form.Group controlId={contact.id} key={contact.id}>\n                            <Form.Check\n                                type=\"checkbox\"\n                                value={selectedContactIds.includes(contact.id)}\n                                label={contact.name}\n                                onChange={() => handleCheckboxChange(contact.id)}\n                            />\n                        </Form.Group>\n                    ))}\n                    <Button className=\"mt-3\" type=\"submit\">Create</Button>\n                </Form>\n            </Modal.Body>\n        </>\n    )\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,MAAtB,QAAoC,iBAApC;AACA,SAASC,WAAT,QAA4B,8BAA5B;AACA,SAASC,gBAAT,QAAiC,mCAAjC;AAEA,eAAe,SAASC,oBAAT,OAA8C;EAAA;;EAAA,IAAdC,UAAc,QAAdA,UAAc;;EAAA,gBACLP,QAAQ,CAAC,EAAD,CADH;EAAA;EAAA,IAClDQ,kBADkD;EAAA,IAC9BC,qBAD8B;;EAAA,mBAEpCL,WAAW,EAFyB;EAAA,IAEjDM,QAFiD,gBAEjDA,QAFiD;;EAAA,wBAG1BL,gBAAgB,EAHU;EAAA,IAGjDM,kBAHiD,qBAGjDA,kBAHiD;;EAKzD,SAASC,YAAT,CAAsBC,CAAtB,EAAyB;IACrBA,CAAC,CAACC,cAAF;IAEAH,kBAAkB,CAACH,kBAAD,CAAlB;IACAD,UAAU;EACb;;EAED,SAASQ,oBAAT,CAA8BC,SAA9B,EAAyC;IACrCP,qBAAqB,CAAC,UAAAQ,sBAAsB,EAAI;MAC5C,IAAIA,sBAAsB,CAACC,QAAvB,CAAgCF,SAAhC,CAAJ,EAAgD;QAC5C,OAAOC,sBAAsB,CAACE,MAAvB,CAA8B,UAAAC,MAAM,EAAI;UAC3C,OAAOJ,SAAS,KAAKI,MAArB;QACH,CAFM,CAAP;MAGH,CAJD,MAIO;QACH,oCAAWH,sBAAX,IAAmCD,SAAnC;MACH;IACJ,CARoB,CAArB;EASH;;EAED,oBACI,uDACI,oBAAC,KAAD,CAAO,MAAP;IAAc,WAAW,MAAzB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,yBADJ,eAEI,oBAAC,KAAD,CAAO,IAAP;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,IAAD;IAAM,QAAQ,EAAEJ,YAAhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACKF,QAAQ,CAACW,GAAT,CAAa,UAAAC,OAAO;IAAA,oBACjB,oBAAC,IAAD,CAAM,KAAN;MAAY,SAAS,EAAEA,OAAO,CAACC,EAA/B;MAAmC,GAAG,EAAED,OAAO,CAACC,EAAhD;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACI,oBAAC,IAAD,CAAM,KAAN;MACI,IAAI,EAAC,UADT;MAEI,KAAK,EAAEf,kBAAkB,CAACU,QAAnB,CAA4BI,OAAO,CAACC,EAApC,CAFX;MAGI,KAAK,EAAED,OAAO,CAACE,IAHnB;MAII,QAAQ,EAAE;QAAA,OAAMT,oBAAoB,CAACO,OAAO,CAACC,EAAT,CAA1B;MAAA,CAJd;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EADJ,CADiB;EAAA,CAApB,CADL,eAWI,oBAAC,MAAD;IAAQ,SAAS,EAAC,MAAlB;IAAyB,IAAI,EAAC,QAA9B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,YAXJ,CADJ,CAFJ,CADJ;AAoBH"},"metadata":{},"sourceType":"module"}