{"ast":null,"code":"var _jsxFileName = \"/home/alexander/personal_projects/chat-app/client/src/Contexts/ContactsProvider.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport useLocalStorage from '../Hooks/useLocalStorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContactsContext = /*#__PURE__*/React.createContext();\nexport function useContacts() {\n  _s();\n\n  return useContext(ContactsContext);\n}\n\n_s(useContacts, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function ContactsProvider(_ref) {\n  _s2();\n\n  let {\n    children\n  } = _ref;\n  const [contacts, setContacts] = useLocalStorage('contacts', []);\n\n  function createContact(id, name) {\n    setContacts(prevContacts => {\n      return [...prevContacts, {\n        id,\n        name\n      }];\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(ContactsContext.Provider, {\n    value: {\n      contacts,\n      createContact\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(ContactsProvider, \"aWfzfaPwLedoIhPywC4kgPBb+0k=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c = ContactsProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactsProvider\");","map":{"version":3,"names":["React","useContext","useLocalStorage","ContactsContext","createContext","useContacts","ContactsProvider","children","contacts","setContacts","createContact","id","name","prevContacts"],"sources":["/home/alexander/personal_projects/chat-app/client/src/Contexts/ContactsProvider.js"],"sourcesContent":["import React, { useContext } from 'react'\nimport useLocalStorage from '../Hooks/useLocalStorage'\n\nconst ContactsContext = React.createContext()\n\nexport function useContacts() {\n    return useContext(ContactsContext)\n}\n\nexport function ContactsProvider({ children }) {\n    const [contacts, setContacts] = useLocalStorage('contacts', [])\n\n    function createContact(id, name) {\n        setContacts(prevContacts => {\n            return [...prevContacts, {id, name}]\n        })\n    }\n\n    return (\n        <ContactsContext.Provider value={{contacts, createContact}}>\n        {children}\n        </ContactsContext.Provider>\n    )\n}"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,eAAP,MAA4B,0BAA5B;;AAEA,MAAMC,eAAe,gBAAGH,KAAK,CAACI,aAAN,EAAxB;AAEA,OAAO,SAASC,WAAT,GAAuB;EAAA;;EAC1B,OAAOJ,UAAU,CAACE,eAAD,CAAjB;AACH;;GAFeE,W;;AAIhB,OAAO,SAASC,gBAAT,OAAwC;EAAA;;EAAA,IAAd;IAAEC;EAAF,CAAc;EAC3C,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,eAAe,CAAC,UAAD,EAAa,EAAb,CAA/C;;EAEA,SAASQ,aAAT,CAAuBC,EAAvB,EAA2BC,IAA3B,EAAiC;IAC7BH,WAAW,CAACI,YAAY,IAAI;MACxB,OAAO,CAAC,GAAGA,YAAJ,EAAkB;QAACF,EAAD;QAAKC;MAAL,CAAlB,CAAP;IACH,CAFU,CAAX;EAGH;;EAED,oBACI,QAAC,eAAD,CAAiB,QAAjB;IAA0B,KAAK,EAAE;MAACJ,QAAD;MAAWE;IAAX,CAAjC;IAAA,UACCH;EADD;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH;;IAdeD,gB;UACoBJ,e;;;KADpBI,gB"},"metadata":{},"sourceType":"module"}