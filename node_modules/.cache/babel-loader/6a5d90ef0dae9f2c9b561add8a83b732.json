{"ast":null,"code":"import _toConsumableArray from \"/home/alexander/personal_projects/chat-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/alexander/personal_projects/chat-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/alexander/personal_projects/chat-app/src/Contexts/ContactsProvider.js\";\nimport React, { useContext } from 'react';\nimport useLocalStorage from '../hooks/useLocalStorage';\nvar ContactsContext = React.createContext();\nexport function useContacts() {\n  return useContext(ContactsContext);\n}\nexport function ContactsProvider(_ref) {\n  var children = _ref.children;\n\n  var _useLocalStorage = useLocalStorage('contacts', []),\n      _useLocalStorage2 = _slicedToArray(_useLocalStorage, 2),\n      contacts = _useLocalStorage2[0],\n      setContacts = _useLocalStorage2[1];\n\n  function createContact(id, name) {\n    setContacts(function (prevContacts) {\n      return [].concat(_toConsumableArray(prevContacts), [{\n        id: id,\n        name: name\n      }]);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(ContactsContext.Provider, {\n    value: {\n      contacts: contacts,\n      createContact: createContact\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, children);\n}","map":{"version":3,"names":["React","useContext","useLocalStorage","ContactsContext","createContext","useContacts","ContactsProvider","children","contacts","setContacts","createContact","id","name","prevContacts"],"sources":["/home/alexander/personal_projects/chat-app/src/Contexts/ContactsProvider.js"],"sourcesContent":["import React, { useContext } from 'react'\nimport useLocalStorage from '../hooks/useLocalStorage'\n\nconst ContactsContext = React.createContext()\n\nexport function useContacts() {\n    return useContext(ContactsContext)\n}\n\nexport function ContactsProvider({ children }) {\n    const [contacts, setContacts] = useLocalStorage('contacts', [])\n\n    function createContact(id, name) {\n        setContacts(prevContacts => {\n            return [...prevContacts, {id, name}]\n        })\n    }\n\n    return (\n        <ContactsContext.Provider value={{contacts, createContact}}>\n        {children}\n        </ContactsContext.Provider>\n    )\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AAEA,IAAMC,eAAe,GAAGH,KAAK,CAACI,aAAN,EAAxB;AAEA,OAAO,SAASC,WAAT,GAAuB;EAC1B,OAAOJ,UAAU,CAACE,eAAD,CAAjB;AACH;AAED,OAAO,SAASG,gBAAT,OAAwC;EAAA,IAAZC,QAAY,QAAZA,QAAY;;EAAA,uBACXL,eAAe,CAAC,UAAD,EAAa,EAAb,CADJ;EAAA;EAAA,IACpCM,QADoC;EAAA,IAC1BC,WAD0B;;EAG3C,SAASC,aAAT,CAAuBC,EAAvB,EAA2BC,IAA3B,EAAiC;IAC7BH,WAAW,CAAC,UAAAI,YAAY,EAAI;MACxB,oCAAWA,YAAX,IAAyB;QAACF,EAAE,EAAFA,EAAD;QAAKC,IAAI,EAAJA;MAAL,CAAzB;IACH,CAFU,CAAX;EAGH;;EAED,oBACI,oBAAC,eAAD,CAAiB,QAAjB;IAA0B,KAAK,EAAE;MAACJ,QAAQ,EAARA,QAAD;MAAWE,aAAa,EAAbA;IAAX,CAAjC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACCH,QADD,CADJ;AAKH"},"metadata":{},"sourceType":"module"}