{"ast":null,"code":"import _objectSpread from \"/home/alexander/personal_projects/chat-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/home/alexander/personal_projects/chat-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/alexander/personal_projects/chat-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/alexander/personal_projects/chat-app/src/Contexts/ConversationsProvider.js\";\nimport React, { useContext, useState } from 'react';\nimport useLocalStorage from '../Hooks/useLocalStorage';\nimport { useContacts } from './ContactsProvider';\nvar ConversationsContext = React.createContext();\nexport function useConversations() {\n  return useContext(ConversationsContext);\n}\nexport function ConversationsProvider(_ref) {\n  var children = _ref.children;\n\n  var _useLocalStorage = useLocalStorage('conversations', []),\n      _useLocalStorage2 = _slicedToArray(_useLocalStorage, 2),\n      conversations = _useLocalStorage2[0],\n      setConversations = _useLocalStorage2[1];\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedConversationIndex = _useState2[0],\n      setSelectedConversationIndex = _useState2[1];\n\n  var _useContacts = useContacts(),\n      contacts = _useContacts.contacts;\n\n  function createConversation(recipients) {\n    setConversations(function (prevConversations) {\n      return [].concat(_toConsumableArray(prevConversations), [{\n        recipients: recipients,\n        messages: []\n      }]);\n    });\n  }\n\n  function addMessageToConversation(_ref2) {\n    var recipients = _ref2.recipients,\n        text = _ref2.text,\n        sender = _ref2.sender;\n  }\n\n  var formattedConversations = conversations.map(function (convo, index) {\n    var recipients = convo.recipients.map(function (recipient) {\n      var contact = contacts.find(function (contact) {\n        return contact.id === recipient;\n      });\n      var name = contact && contact.name || recipient;\n      return {\n        id: recipient,\n        name: name\n      };\n    });\n    var selected = index === selectedConversationIndex;\n    return _objectSpread({}, convo, {\n      recipients: recipients,\n      selected: selected\n    });\n  });\n  var value = {\n    conversations: formattedConversations,\n    selectedConversation: formattedConversations[selectedConversationIndex],\n    selectConversationIndex: setSelectedConversationIndex,\n    createConversation: createConversation\n  };\n  return /*#__PURE__*/React.createElement(ConversationsContext.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, children);\n}","map":{"version":3,"names":["React","useContext","useState","useLocalStorage","useContacts","ConversationsContext","createContext","useConversations","ConversationsProvider","children","conversations","setConversations","selectedConversationIndex","setSelectedConversationIndex","contacts","createConversation","recipients","prevConversations","messages","addMessageToConversation","text","sender","formattedConversations","map","convo","index","recipient","contact","find","id","name","selected","value","selectedConversation","selectConversationIndex"],"sources":["/home/alexander/personal_projects/chat-app/src/Contexts/ConversationsProvider.js"],"sourcesContent":["import React, { useContext, useState } from 'react'\nimport useLocalStorage from '../Hooks/useLocalStorage'\nimport { useContacts } from './ContactsProvider'\n\nconst ConversationsContext = React.createContext()\n\nexport function useConversations() {\n    return useContext(ConversationsContext)\n}\n\nexport function ConversationsProvider({ children }) {\n    const [conversations, setConversations] = useLocalStorage('conversations', [])\n    const [selectedConversationIndex, setSelectedConversationIndex] = useState(0)\n    const { contacts } = useContacts()\n\n    function createConversation(recipients) {\n        setConversations(prevConversations => {\n            return [...prevConversations, { recipients, messages: [] }]\n        })\n    }\n\n    function addMessageToConversation({ recipients, text, sender }) {\n\n    }\n\n    const formattedConversations = conversations.map((convo, index) => {\n        const recipients = convo.recipients.map(recipient => {\n            const contact = contacts.find(contact => {\n                return contact.id === recipient\n            })\n        const name = (contact && contact.name) || recipient\n        return {id: recipient, name}\n        })\n        const selected = index === selectedConversationIndex\n        return { ...convo, recipients, selected }\n    })\n\n    const value = {\n        conversations: formattedConversations,\n        selectedConversation: formattedConversations[selectedConversationIndex],\n        selectConversationIndex: setSelectedConversationIndex,\n        createConversation\n    }\n\n    return (\n        <ConversationsContext.Provider value={value}>\n        {children}\n        </ConversationsContext.Provider>\n    )\n}"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AACA,SAASC,WAAT,QAA4B,oBAA5B;AAEA,IAAMC,oBAAoB,GAAGL,KAAK,CAACM,aAAN,EAA7B;AAEA,OAAO,SAASC,gBAAT,GAA4B;EAC/B,OAAON,UAAU,CAACI,oBAAD,CAAjB;AACH;AAED,OAAO,SAASG,qBAAT,OAA6C;EAAA,IAAZC,QAAY,QAAZA,QAAY;;EAAA,uBACNN,eAAe,CAAC,eAAD,EAAkB,EAAlB,CADT;EAAA;EAAA,IACzCO,aADyC;EAAA,IAC1BC,gBAD0B;;EAAA,gBAEkBT,QAAQ,CAAC,CAAD,CAF1B;EAAA;EAAA,IAEzCU,yBAFyC;EAAA,IAEdC,4BAFc;;EAAA,mBAG3BT,WAAW,EAHgB;EAAA,IAGxCU,QAHwC,gBAGxCA,QAHwC;;EAKhD,SAASC,kBAAT,CAA4BC,UAA5B,EAAwC;IACpCL,gBAAgB,CAAC,UAAAM,iBAAiB,EAAI;MAClC,oCAAWA,iBAAX,IAA8B;QAAED,UAAU,EAAVA,UAAF;QAAcE,QAAQ,EAAE;MAAxB,CAA9B;IACH,CAFe,CAAhB;EAGH;;EAED,SAASC,wBAAT,QAAgE;IAAA,IAA5BH,UAA4B,SAA5BA,UAA4B;IAAA,IAAhBI,IAAgB,SAAhBA,IAAgB;IAAA,IAAVC,MAAU,SAAVA,MAAU;EAE/D;;EAED,IAAMC,sBAAsB,GAAGZ,aAAa,CAACa,GAAd,CAAkB,UAACC,KAAD,EAAQC,KAAR,EAAkB;IAC/D,IAAMT,UAAU,GAAGQ,KAAK,CAACR,UAAN,CAAiBO,GAAjB,CAAqB,UAAAG,SAAS,EAAI;MACjD,IAAMC,OAAO,GAAGb,QAAQ,CAACc,IAAT,CAAc,UAAAD,OAAO,EAAI;QACrC,OAAOA,OAAO,CAACE,EAAR,KAAeH,SAAtB;MACH,CAFe,CAAhB;MAGJ,IAAMI,IAAI,GAAIH,OAAO,IAAIA,OAAO,CAACG,IAApB,IAA6BJ,SAA1C;MACA,OAAO;QAACG,EAAE,EAAEH,SAAL;QAAgBI,IAAI,EAAJA;MAAhB,CAAP;IACC,CANkB,CAAnB;IAOA,IAAMC,QAAQ,GAAGN,KAAK,KAAKb,yBAA3B;IACA,yBAAYY,KAAZ;MAAmBR,UAAU,EAAVA,UAAnB;MAA+Be,QAAQ,EAARA;IAA/B;EACH,CAV8B,CAA/B;EAYA,IAAMC,KAAK,GAAG;IACVtB,aAAa,EAAEY,sBADL;IAEVW,oBAAoB,EAAEX,sBAAsB,CAACV,yBAAD,CAFlC;IAGVsB,uBAAuB,EAAErB,4BAHf;IAIVE,kBAAkB,EAAlBA;EAJU,CAAd;EAOA,oBACI,oBAAC,oBAAD,CAAsB,QAAtB;IAA+B,KAAK,EAAEiB,KAAtC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACCvB,QADD,CADJ;AAKH"},"metadata":{},"sourceType":"module"}